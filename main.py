from sin import Sin
import argparse
import sys

def main():
    parser = argparse.ArgumentParser(description="Sin - Russian AI Assistant")
    parser.add_argument('--train', action='store_true', help="Enable training mode")
    args = parser.parse_args()
    
    ai = Sin()
    
    if args.train:
        print("üîß Starting training process...")
        try:
            loss = ai.train()
            print(f"‚úÖ Training complete | Final loss: {loss:.4f}")
        except Exception as e:
            print(f"‚ùå Training failed: {str(e)}")
        return
    
    # –†–µ–∂–∏–º —á–∞—Ç–∞
    print("Sin: –ü—Ä–∏–≤–µ—Ç! –Ø Sin, —Ç–≤–æ–π —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π –ò–ò –ø–æ–º–æ—â–Ω–∏–∫.")
    print("     –ù–∞–ø–∏—à–∏ '–≤—ã—Ö–æ–¥' —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥.\n")
    
    while True:
        try:
            user_input = input("–¢—ã: ").strip()
            
            if user_input.lower() in ('–≤—ã—Ö–æ–¥', 'exit', 'quit'):
                print("Sin: –î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!")
                ai.save()
                break
                
            response = ai.chat(user_input)
            print(f"Sin: {response}")
            
        except KeyboardInterrupt:
            print("\nSin: –°–æ—Ö—Ä–∞–Ω—è—é –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º...")
            ai.save()
            sys.exit(0)
        except Exception as e:
            print(f"Sin: –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    main()
