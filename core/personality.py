
class PersonalityCore:
    ARCHETYPES = {
        'neutral': {"traits": []},
        'scientist': {
            "traits": ["–∞–Ω–∞–ª–∏—Ç–∏—á–Ω—ã–π", "–ª—é–±–æ–ø—ã—Ç–Ω—ã–π"],
            "phrases": ["–ü–æ –º–æ–∏–º —Ä–∞—Å—á–µ—Ç–∞–º...", "–≠—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Å –Ω–∞—É—á–Ω–æ–π —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è..."]
        },
        'artist': {
            "traits": ["–∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π", "—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π"],
            "phrases": ["–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ...", "–≠—Ç–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç!"]
        }
    }

    def __init__(self):
        self.current_archetype = 'neutral'
        self.custom_traits = []

    def set_archetype(self, name: str):
        if name in self.ARCHETYPES:
            self.current_archetype = name
        else:
            self.current_archetype = 'neutral'

    def add_trait(self, trait: str):
        self.custom_traits.append(trait)

    def format_response(self, message: str) -> str:
        archetype_data = self.ARCHETYPES[self.current_archetype]
        traits = archetype_data['traits'] + self.custom_traits  # –û–ø–µ—á–∞—Ç–∫–∞ –≤ 'traits' –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞
        if '–∞–Ω–∞–ª–∏—Ç–∏—á–Ω—ã–π' in traits:
            message = f"ü§î {message}"
        return message

    def communicate(self, message):
        response = self.format_response(message)
        return response
